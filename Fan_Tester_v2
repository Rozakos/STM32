//byte pinMap[32] = {PA_11,PA_10,PA_9,PA_8,PC_9,PC_7,PC_6,PC_5,PB_0,PC_4,PC_3,PA_7,PA_6,PA_5,PB_5,PB_6,PB_14,PB_13,PB_12,PB_11,PB_15,PB_10,PB_2,PB_1};
                 //   1      2     3    4   5     6    7     8   9   10   11   12   13   14   15   16   17    18    19    20    21    22    23   24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44

//TO SWSTO BYTEMAP
byte pinMap[32] = {PB_6, PB_5, PA_5, PA_6, PA_7, PC_3, PC_4, PB_0, PC_5, PC_6, PC_7, PC_9, PA_8, PA_9,PA_10, PA_11,PB_1, PB_2, PB_10, PB_15, PB_11, PB_12, PB_13, PB_14};
                   // 1    2    3     4     5     6     7     8     9     10     11    12   13   14    15    16    17    18    19      20            21      22    23

const int buttonPin = PB_1;     // the number of the pushbutton pin
const int fan_enable1 =  PB_6;     //pin 1
const int fan_enable2 =  PB_5;     //pin 2
const int fan_enable3 =  PA_5;      //pin 3
const int fan_enable4 =  PA_6;      //pin 4
const int button_voltage =  PC_5; //pin 9


boolean fans1State = false;
boolean fans2State = false;

long buttonTimer = 0;
long longPressTime = 250;

boolean buttonActive = false;
boolean longPressActive = false;

void setup() {

  Serial.begin(115200);
  Serial.println("Card Started");
  // initialize the LED pin as an output:
  pinMode(fan_enable1, OUTPUT);
  pinMode(fan_enable2, OUTPUT);
  pinMode(fan_enable3, OUTPUT);
  pinMode(fan_enable4, OUTPUT);
  pinMode(button_voltage, OUTPUT);
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin, INPUT);
}


void loop() {

  if (digitalRead(buttonPin) == HIGH) {

    if (buttonActive == false) {

      buttonActive = true;
      buttonTimer = millis();

    }

    if ((millis() - buttonTimer > longPressTime) && (longPressActive == false)) {

      longPressActive = true;
      fans1State = !fans1State;
      Serial.println("Fans turning off...");
      fans_off();
      Serial.println("Fans turned off...");
    }

  } else {

    if (buttonActive == true) {

      if (longPressActive == true) {

        longPressActive = false;

      } else {

        fans2State = !fans2State;
        Serial.println("Sequence starting...");
        fan_sequence();
        Serial.println("Sequence finished...");
      }

      buttonActive = false;

    }

  }

}


void fan_sequence(){
   digitalWrite(fan_enable1, HIGH);
   delay(500);
   digitalWrite(fan_enable2, HIGH);
   delay(500);
   digitalWrite(fan_enable3, HIGH);
   delay(500);
   digitalWrite(fan_enable4, HIGH);
}

void fans_off(){
   digitalWrite(fan_enable1, LOW);
   digitalWrite(fan_enable2, LOW);
   digitalWrite(fan_enable3, LOW);
   digitalWrite(fan_enable4, LOW);
}
